{
  "openapi": "3.0.3",
  "info": {
    "title": "EuroConsumers.BeanApi",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://beanapi.identity.pro.internet.conseur.org:5190",
      "description": "base path for bean"
    },
    {
      "url": "https://mile21.com",
      "description": "base path for mile21"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "contactserviceapi-euroconsumers-contacts-api-controllers-phonevalidation"
    },
    {
      "name": "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
    },
    {
      "name": "localportugalservices-euroconsumers-localportugalservices-api"
    },
    {
      "name": "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
    },
    {
      "name": "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
    },
    {
      "name": "mile21-ec-mile21-api-controllers"
    },
    {
      "name": "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
    },
    {
      "name": "medicinedcsapi-ec-medicine-dcs-api-controllers"
    },
    {
      "name": "medicinemdsapi-ec-medicine-mds-api-controllers-products"
    }
  ],
  "paths": {
    "/api/PhoneValidation/Validate": {
      "post": {
        "tags": [
          "contactserviceapi-euroconsumers-contacts-api-controllers-phonevalidation"
        ],
        "summary": "Validates a phone number for a specific country.",
        "description": "The phone number can be supplied in the national or international (e.g.: +39) format.\r\n            When supplying the country correctly, e.g. \"IT\" for Italy, you can omit the international format in the phone number: e.g. 02906400.",
        "requestBody": {
          "description": "The phone number, the 2 letters ISO code representing the country and the realm.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneValidationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneValidationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneValidationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Company/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Company/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Company/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Company/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Company/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/CompanyDetails/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/CompanyDetails/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/CompanyDetails/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/CompanyDetails/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDetailsFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDetailsDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CompanyDetails/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-companies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/B2Bapi/getReasonCategory": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "B2B_GetReasonCategory",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReasonCategoryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReasonCategoryModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReasonCategoryModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReasonCategoryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/B2Bapi/addContactReason": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "B2B_AddContactReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFormModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFormModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactFormModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactFormModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContactFormModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "contact"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/BackEndBottledGas/pos": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BEBottledGas_Pos",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/BackEndBottledGas/price": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BEBottledGas_Prices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/BackEndBottledGas/validate/{type}": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BEBottledGas_ValidateOp",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidateVm"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidateVm"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidateVm"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidateVm"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidateVm"
                }
              }
            }
          },
          "required": true,
          "x-bodyName": "listToValidate"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/pos": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_AddPOS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            }
          },
          "required": true,
          "x-bodyName": "vm"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/updatepos": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_UpdatePOS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GasPOS"
              }
            }
          },
          "required": true,
          "x-bodyName": "vm"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/pos/{skip}": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetPointsOfSale",
        "parameters": [
          {
            "name": "skip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/brands": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetBrands",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/gasTypes/brand": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetGasTypesByBrand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "model"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/fullGasTypes/brand/{brand}": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetFullGasTypesByBrand",
        "parameters": [
          {
            "name": "brand",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/allGasTypes": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetAllGasTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/pricesAverages": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetPricesAverages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/pricesAverages/county": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetPricesAveragesCounty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PricesAveragesCountyModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "model"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/price": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_AddPrices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPrice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GasPrice"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPrice"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GasPrice"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GasPrice"
              }
            }
          },
          "required": true,
          "x-bodyName": "vmGasPrice"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/bgapi/counties": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "BottledGas_GetCounties",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/ComplainApi/getComplainUser": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Complain_GetComplainUser",
        "parameters": [
          {
            "name": "userRecordId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserComplainModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserComplainModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserComplainModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserComplainModel"
                }
              }
            }
          }
        }
      }
    },
    "/ComplainApi/setComplainUser": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Complain_SetComplainUser",
        "parameters": [
          {
            "name": "userRecordId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "complaintId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/ComplainApi/Ping": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Complain_Ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/pendingDocuments": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_GetPendingDocuments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/notSentDocuments": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_GetNotSentDocuments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDocumentsOutput"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/addDocuments": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_AddDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentsInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentsInput"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentsInput"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentsInput"
              }
            }
          },
          "required": true,
          "x-bodyName": "input"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDocumentOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDocumentOutput"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddDocumentOutput"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddDocumentOutput"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/profileFromUploadSession": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_GetProfileFromUploadSession",
        "parameters": [
          {
            "name": "uploadSession",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileFromUploadSessionOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileFromUploadSessionOutput"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileFromUploadSessionOutput"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileFromUploadSessionOutput"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/checkAllPendingDocuments": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_CheckAllPendingDocuments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseServiceOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseServiceOutput"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BaseServiceOutput"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BaseServiceOutput"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/notifyStatusChange": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_NotifyStatusChange",
        "parameters": [
          {
            "name": "docid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyStatusChangeOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyStatusChangeOutput"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyStatusChangeOutput"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyStatusChangeOutput"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/ParterApiCallTest": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_ParterApiCallTest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/Ping": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_Ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InvoiceServiceApi/exposedSwagger": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "InvoiceService_ExposedSwagger",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/kidzaniaApi/calculate": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Kidzania_Calculate",
        "parameters": [
          {
            "name": "test.testId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test.product1Prop1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product1Prop2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product1Prop3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product2Prop1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product2Prop2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product2Prop3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product3Prop1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product3Prop2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product3Prop3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product1Prop4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product2Prop4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product3Prop4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product4Prop1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product4Prop2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product4Prop3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "test.product4Prop4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/kidzaniaApi/Ping": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Kidzania_Ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/KMCostApi/getresults": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "KMCost_GetResults",
        "parameters": [
          {
            "name": "kmCostModel.brand1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.model1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.name1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.brand2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.model2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.name2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kmCostModel.years",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "kmCostModel.kMs",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/KMCostApi/getbrands": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "KMCost_GetBrands",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/KMCostApi/getmodels": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "KMCost_GetModels",
        "parameters": [
          {
            "name": "brandModel.brand1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandModel.brand2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/KMCostApi/getnames": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "KMCost_GetNames",
        "parameters": [
          {
            "name": "brandModelModel.brand1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandModelModel.model1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandModelModel.brand2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandModelModel.model2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        }
      }
    },
    "/KMCostApi/Ping": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "KMCost_Ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/companies": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetCompanies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/companyDetails/{id}": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetCompanyDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/companiesByFreeText": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetCompaniesByFreeText",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/districts": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetDistricts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistrictModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistrictModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistrictModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistrictModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/addcompany": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_AddCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "company"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/addUser": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_AddUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "user"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/addReview": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_AddReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequestModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequestModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequestModel"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequestModel"
              }
            }
          },
          "required": true,
          "x-bodyName": "review"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/userExists": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_UserExists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-bodyName": "userEmail"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/getUserByEmail": {
      "post": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      }
    },
    "/selectapi/keyPhrases": {
      "get": {
        "tags": [
          "localportugalservices-euroconsumers-localportugalservices-api"
        ],
        "operationId": "Select_GetKeyPhrases",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyPhraseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyPhraseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyPhraseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyPhraseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Component/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Component/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Component/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Component/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Component/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dosage/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DosageDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dosage/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DosageDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DosageDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dosage/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DosageDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dosage/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DosageFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DosageFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DosageDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Dosage/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DosageDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Formula/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormulaDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Formula/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormulaDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Formula/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormulaDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Formula/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormulaFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormulaDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Formula/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormulaDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ingredient/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ingredient/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ingredient/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ingredient/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IngredientDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Ingredient/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/IngredientDetails/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/IngredientDetails/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/IngredientDetails/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/IngredientDetails/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientDetailsFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IngredientDetailsDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/IngredientDetails/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-formulas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministration/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministration/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministration/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministration/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WayOfAdministrationDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministration/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministrationDetails/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministrationDetails/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministrationDetails/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministrationDetails/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WayOfAdministrationDetails/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-waysofadministration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve all User Cars by federatedID",
        "operationId": "GetAllCarsByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/lov/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve all User Cars list of value by federatedID",
        "operationId": "GetAllCarsLovByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/{id}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetCarById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "UpdateCar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Cars/quick/{id}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Returns only number/boolean values of the car without car labels or user info\r\nNB: used for quick query",
        "operationId": "GetMinimalQuickCarById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car ID",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/federated-id/{federatedId}/id/{id}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "",
        "operationId": "GetCarByIdAndUserFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car ID",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Create a car",
        "operationId": "CreateCar",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing all the properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCarResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/default/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get the ID of the car that user choose as \"default car\"",
        "operationId": "GetDefaultUserCarIdByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get the ID of the car that user choose as \"default car\"",
        "operationId": "GetDefaultUserCarId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Cars/default/federated-id/{federatedId}/car-id/{id}": {
      "put": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Set the car that user choose as \"default car\" for refuel or consumption purpose",
        "operationId": "SetDefaultUserCar",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car ID",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Cars/{id}/federated-id/{federatedId}": {
      "delete": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "DeleteCarByIdAndUserFederatedId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Challange/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetChallangesByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Challange": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "CreateChallenge",
        "parameters": [
          {
            "name": "federatedId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Challange/{id}": {
      "delete": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "CloseChallenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Challenge/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetChallengesByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Challenge/status/car-id/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get parameters to check if challanges can be activated or not and why",
        "operationId": "GetChallengesStatusByCarIdAndUserFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car ID",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeStatusResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeStatusResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeStatusResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Challenge": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "SetNewChallenge",
        "parameters": [
          {
            "name": "federatedId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Challenge/federated-id/{federatedId}/id/{id}": {
      "delete": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Deactivate the challenges by challenge ID.",
        "operationId": "DeactivateChallenge",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The challenge ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The challenge ID of the user",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Consumption/car-id/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get average consumption values merging EMISIA m1, m2, model parameters with user statistics",
        "operationId": "GetConsumptionsByCarIdAndUserFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car ID",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompareConsumptionsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompareConsumptionsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompareConsumptionsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Consumption/global/car-id/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get global consumptios parameters including Km/L, €/Km, gCO₂",
        "operationId": "GetGlobalConsumptiosByCarIdAndUserFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car id",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalConsumptionsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalConsumptionsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalConsumptionsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Consumption/savings/car-id/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get global savings parameters based on challenge date and including Liters and KgCO₂ (averages, stats, ...)",
        "operationId": "GetGlobalSavingsByCarIdAndUserFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car id",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalSavingsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalSavingsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalSavingsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Countries/{env}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetAllCountriesForEnvironment",
        "parameters": [
          {
            "name": "env",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Countries/redirect-url/{code}/{env}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetRedirectUrlForCountryAndEnvironment",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "env",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Countries/enabled-languages/{code}/{env}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetEnabledLanguagesForCountryAndEnvironment",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "env",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DrivingStyles/recap/unique/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get the latest DrivingStyles RecapForEachCarByFederatedId",
        "operationId": "GetLatestDrivingStylesRecapForEachCarByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DrivingStyleRecapResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DrivingStyleRecapResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DrivingStyleRecapResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DrivingStyles/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve the latest driving style associated with the car. \r\nIf it doesn't already exist, it creates a new one.",
        "operationId": "GetLatestDrivingStyleByCarIdAndFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "the car ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "the car ID",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DrivingStyles/new": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "",
        "operationId": "AddDrivingStyleToExistingCar",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDrivingStyleResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDrivingStyleResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDrivingStyleResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DrivingStyles/default/{unit}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "",
        "operationId": "GetDefaultDrivingStyleByLanguageCodeAndUnit",
        "parameters": [
          {
            "name": "unit",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovUnit"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDrivingStyleResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDrivingStyleResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDrivingStyleResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/maker": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetAllMakers",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerResourceEm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerResourceEm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerResourceEm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/modelPowertrains/vehicles/{modelId}/{powertrainId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetModelPowertrains",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "powertrainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehiclesResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehiclesResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehiclesResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/vehiclesForFindACar": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetCarsForFindACar",
        "parameters": [
          {
            "name": "FilterMake",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FilterClass",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FilterPower",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeNotOnMarket",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "GroupIds",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/orderedVehiclesForFindACar": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetOrderedCarsForFindACar",
        "parameters": [
          {
            "name": "FilterMake",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FilterClass",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FilterPower",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeNotOnMarket",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "GroupIds",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VeichleListForFindACar"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/makemodels/{makeId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetMakerModels",
        "parameters": [
          {
            "name": "makeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "modelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerModelResourceEm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerModelResourceEm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MakerModelResourceEm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/modelPowertrains/{modelId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get the 'Powertrain' list based on the Emisia car Id selected and \r\ntranslated by the context request language",
        "operationId": "GetPowertrains",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "Emisia car model id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Emisia car model id",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/powertrain": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetAllPowertrains",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowertrainResourceEm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emisia/segments": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetAllSegments",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SegmentResourceEm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SegmentResourceEm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SegmentResourceEm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Locales/{env}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetAllLocalesByEnvironment",
        "parameters": [
          {
            "name": "env",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocaleResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocaleResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocaleResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Locales/redirect-url/{localeCode}/{env}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetRedirectUrlByLocaleAndEnvironment",
        "parameters": [
          {
            "name": "localeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "env",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocaleResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocaleResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocaleResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Lovs/class-target/{classTarget}/unit/{unit}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve the List of values based on \"Accept-Language\" header value, class target and unit",
        "operationId": "GetLovsByClassTargetAndUnit",
        "parameters": [
          {
            "name": "classTarget",
            "in": "path",
            "description": "The class/set who the LOV is assigned (Eg: 0 == AllGeneric, ..., 5 == DrivingStyle, ...)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovClassTarget"
            }
          },
          {
            "name": "unit",
            "in": "path",
            "description": "The unit system (Eg: 0 == Dimensionless, 1 == Standard, ...). <br />\r\n                If null/not specified the controller retrieves all istances",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovUnit"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LovResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LovResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LovResource"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Lovs/select-list-item/class-target/{classTarget}/code/{code}/unit/{unit}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve the List of values based on \"Accept-Language\" header value, class target and unit",
        "operationId": "GetSelectListItemByClassTargetAndUnit",
        "parameters": [
          {
            "name": "classTarget",
            "in": "path",
            "description": "The class/set who the LOV is assigned (Eg: 0 == AllGeneric, ..., 5 == DrivingStyle, ...)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovClassTarget"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The key of LOV",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The key of LOV",
              "nullable": true
            }
          },
          {
            "name": "unit",
            "in": "path",
            "description": "The unit system (Eg: 0 == Dimensionless, 1 == Standard, ...). <br />\r\n                If null/not specified the controller retrieves all istances",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovUnit"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M21SelectListItem"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Lovs/driving-styles/{unit}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve the List of values based on \"Accept-Language\" header value and the unit",
        "operationId": "GetDrivingStyleLovsByUnit",
        "parameters": [
          {
            "name": "unit",
            "in": "path",
            "description": "The unit system (Eg: 0 == Dimensionless, 1 == Standard)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LovUnit"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleLovsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleLovsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrivingStyleLovsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MergeFederatedIds/MergeFederatedIDs": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "MergeFederatedIDs",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeFederatedIdsResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeFederatedIdsResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeFederatedIdsResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MergeFederatedIdsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeFederatedIdsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeFederatedIdsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MergeFederatedIds/UndoMerge": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "UndoMergeUser",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoMergeFederatedIdsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoMergeFederatedIdsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UndoMergeFederatedIdsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UndoMergeUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UndoMergeUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UndoMergeUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Refuels/car-id/{carId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetRefuelsByCarId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Refuels/with-averages/car-id/{carId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get all single car refuels adding runtime calculations (averages, stats, ...)",
        "operationId": "GetOrderedRefuelsWithAveragesByCarId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car id",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Refuels/with-averages/last-challenge/car-id/{carId}/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get all single car refuels starting from the last challenge date and adding runtime calculations (averages, stats, ...).",
        "operationId": "GetLastChallengeOrderedRefuelsWithAveragesByCarIdAndFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car id",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefuelWithAveragesResource"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Refuels/challenge/with-averages/car-id/{carId}/federated-id/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get all single car refuels starting from the last challenge date and adding runtime calculations (averages, stats, ...).",
        "operationId": "GetChallengeRefuelsWithAveragesByCarIdAndFederatedId",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The car id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The car id",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HistorySavingsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorySavingsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorySavingsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Refuels": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Add a car refuel",
        "operationId": "AddRefuel",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRefuelResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRefuelResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRefuelResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Refuels/check-ds-and-confirm-emisia/federated-id/{federatedId}": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Add a car refuel",
        "operationId": "CheckDrivingStyleAndConfirmEmisiaRefuel",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefuelKeysResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefuelKeysResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefuelKeysResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Refuels/{id}/federated-id/{federatedId}": {
      "delete": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "DeleteRefuel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "federatedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Refuels/validate/{carId}/power-train-type/{powerTrainType}/refuel-date/{refuelDate}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Returns the two refuels around the date, including odometer values and other validation fields.",
        "operationId": "ValidateRefuel",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "Car ID used to retrieve all the refuels;",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Car ID used to retrieve all the refuels;",
              "format": "int32"
            }
          },
          {
            "name": "powerTrainType",
            "in": "path",
            "description": "The car/refuel powerTrain Type;",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PowerTrainType"
            }
          },
          {
            "name": "refuelDate",
            "in": "path",
            "description": "the refuel DateTime.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "the refuel DateTime.",
              "format": "date-time"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelValidationResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelValidationResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefuelValidationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Statistics": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Retrieve some statistics about number of users, cars, refuels",
        "operationId": "GetUserCarRefuelStatisticsByCountryCode",
        "parameters": [
          {
            "name": "forAllCoutries",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Status/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Get user status inspecting his cars, refuel and driving style",
        "operationId": "GetStatusByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Users/{federatedId}": {
      "get": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "operationId": "GetUserByFederatedId",
        "parameters": [
          {
            "name": "federatedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Users": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Create a user if doesn't exist and check/update the locale/culture selected and the lastLogin date",
        "operationId": "CheckUser",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "requestBody": {
          "description": "object that contains user properties/state",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Users/language": {
      "post": {
        "tags": [
          "mile21-ec-mile21-api-controllers"
        ],
        "summary": "Change the selected language of the user",
        "operationId": "ChangeLanguage",
        "parameters": [
          {
            "name": "federatedId",
            "in": "query",
            "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
            "schema": {
              "type": "string",
              "description": "The user federated id that own the car (Eg: \"4a4ff553-69b9-4542-b8d2-4e529c8e0739\").",
              "nullable": true
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The new language code: Eg: \"it\"",
            "schema": {
              "type": "string",
              "description": "The new language code: Eg: \"it\"",
              "nullable": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Supported languages",
            "schema": {
              "type": "string",
              "default": "en-GB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/GalenicForm/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicForm/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicForm/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicForm/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GalenicFormDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicForm/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicFormDetails/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicFormDetails/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicFormDetails/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicFormDetails/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GalenicFormDetailsFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GalenicFormDetailsDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/GalenicFormDetails/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-galenicforms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalenicFormDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Import/Queue": {
      "post": {
        "tags": [
          "medicinedcsapi-ec-medicine-dcs-api-controllers"
        ],
        "summary": "Queue a new import. The requester must specify the third party to use.\r\nThe import will be executed as soon as all previous request have been handled",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Import/Cancel": {
      "post": {
        "tags": [
          "medicinedcsapi-ec-medicine-dcs-api-controllers"
        ],
        "summary": "Cancel an import",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelImportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelImportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelImportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Import/Gets": {
      "post": {
        "tags": [
          "medicinedcsapi-ec-medicine-dcs-api-controllers"
        ],
        "summary": "Get the status of a specific queued import.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetImportsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetImportsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetImportsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Import/Status": {
      "post": {
        "tags": [
          "medicinedcsapi-ec-medicine-dcs-api-controllers"
        ],
        "summary": "Get the status of a specific queued import.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductDetails/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductDetails/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductDetails/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductDetails/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDetailsDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductDetails/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailsDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductWayOfAdministration/Create": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcCreateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcCreateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcCreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductWayOfAdministration/Update": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the update of an market item.\r\nWhile the market item is updated an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcUpdateItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcUpdateItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDcUpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductWayOfAdministration/Push": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "summary": "Handle the push of an market item.\r\nWhile the market item is pushed an entry of the new data are saved int the history table of that item.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductWayOfAdministration/GetItems": {
      "post": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationFilterDcGetItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationFilterDcGetItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductWayOfAdministrationFilterDcGetItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductWayOfAdministration/GetItem": {
      "get": {
        "tags": [
          "medicinemdsapi-ec-medicine-mds-api-controllers-products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PhoneValidationRequest": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "realm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneValidationResponse": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "hasError": {
            "type": "boolean",
            "readOnly": true
          },
          "internationalDiallingCode": {
            "type": "string",
            "nullable": true
          },
          "isValid": {
            "type": "boolean"
          },
          "nationalFormat": {
            "type": "string",
            "nullable": true
          },
          "numberType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ExceptionErrorResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HasLastVersionDc": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          },
          "hasLastVersion": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsDc": {
        "required": [
          "companyId",
          "culture",
          "name"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "culture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyDc": {
        "required": [
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyDetailsDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PushItemRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "pushAction": {
            "type": "integer",
            "format": "int32"
          },
          "targetEnvironment": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsFilterDc": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyFilterDc": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyDetailsFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyDetailsFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDetailsFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReasonCategoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ContactFormModel": {
        "type": "object",
        "properties": {
          "idContactReason": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "reasonDetail": {
            "type": "string"
          },
          "federatedID": {
            "type": "string"
          }
        }
      },
      "Object": {
        "type": "object"
      },
      "ValidateVm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "validate": {
            "type": "string"
          }
        }
      },
      "GasPOS": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "extPostalCode": {
            "type": "string"
          },
          "gps": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countie": {
            "type": "integer",
            "format": "int32"
          },
          "district": {
            "type": "integer",
            "format": "int32"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GasPrice"
            }
          }
        }
      },
      "GasPrice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "otherBrand": {
            "type": "string"
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "isCollectedPrice": {
            "type": "boolean"
          },
          "deliveredPrice": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceKg": {
            "type": "number",
            "format": "double"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "brand": {
            "$ref": "#/components/schemas/GasBrand"
          },
          "type": {
            "$ref": "#/components/schemas/GasType"
          }
        }
      },
      "GasBrand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderPosition": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "boolean"
          }
        }
      },
      "GasType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "minPrice": {
            "type": "number",
            "format": "double"
          },
          "maxPrice": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PricesAveragesCountyModel": {
        "type": "object",
        "properties": {
          "countyId": {
            "type": "string"
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserComplainModel": {
        "type": "object",
        "properties": {
          "fedId": {
            "type": "string"
          },
          "companyIdReferenceDbId": {
            "type": "integer",
            "format": "int32"
          },
          "userCompanyReferenceType": {
            "type": "integer",
            "format": "int32"
          },
          "nif": {
            "type": "string"
          },
          "complainTitle": {
            "type": "string"
          },
          "complainDescriptionText": {
            "type": "string"
          }
        }
      },
      "GetDocumentsOutput": {
        "type": "object",
        "properties": {
          "uploadSessionId": {
            "type": "string"
          },
          "uploaderFedId": {
            "type": "string"
          },
          "azureStoragePath": {
            "type": "string"
          },
          "azureDocId": {
            "type": "string"
          },
          "partnerDocumentId": {
            "type": "string"
          },
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          }
        }
      },
      "AddDocumentsInput": {
        "type": "object",
        "properties": {
          "uploadSessionId": {
            "type": "string"
          },
          "uploaderFedId": {
            "type": "string"
          },
          "uploaderName": {
            "type": "string"
          },
          "uploaderEmail": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureDocumentInput"
            }
          }
        }
      },
      "AzureDocumentInput": {
        "type": "object",
        "properties": {
          "azureStoragePath": {
            "type": "string"
          },
          "azureDocId": {
            "type": "string"
          }
        }
      },
      "AddDocumentOutput": {
        "type": "object",
        "properties": {
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          }
        }
      },
      "GetProfileFromUploadSessionOutput": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/ProfileContract"
          },
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          }
        }
      },
      "ProfileContract": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "readOnly": true
          },
          "power": {
            "type": "string"
          },
          "tariffType": {
            "type": "string"
          },
          "calculationType": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "periodicity": {
            "type": "string",
            "readOnly": true
          },
          "noCycleConsumption": {
            "type": "number",
            "format": "double"
          },
          "noCyclePrice": {
            "type": "number",
            "format": "double"
          },
          "noCylePeriod": {
            "type": "string",
            "readOnly": true
          },
          "noCycleDailyPrice": {
            "type": "number",
            "format": "double"
          },
          "bihourlyOffpeakValue": {
            "type": "number",
            "format": "double"
          },
          "bihourlyPeakValue": {
            "type": "number",
            "format": "double"
          },
          "bihourlyOffpeakPrice": {
            "type": "number",
            "format": "double"
          },
          "bihourlyPeakPrice": {
            "type": "number",
            "format": "double"
          },
          "bihourlyPeriod": {
            "type": "string",
            "readOnly": true
          },
          "bihourlyDailyPrice": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BaseServiceOutput": {
        "type": "object",
        "properties": {
          "returnMessage": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          }
        }
      },
      "NotifyStatusChangeOutput": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusMessage": {
            "type": "string"
          }
        }
      },
      "TestVm": {
        "type": "object",
        "properties": {
          "testId": {
            "type": "string"
          },
          "product1Prop1": {
            "type": "integer",
            "format": "int32"
          },
          "product1Prop2": {
            "type": "integer",
            "format": "int32"
          },
          "product1Prop3": {
            "type": "integer",
            "format": "int32"
          },
          "product2Prop1": {
            "type": "integer",
            "format": "int32"
          },
          "product2Prop2": {
            "type": "integer",
            "format": "int32"
          },
          "product2Prop3": {
            "type": "integer",
            "format": "int32"
          },
          "product3Prop1": {
            "type": "integer",
            "format": "int32"
          },
          "product3Prop2": {
            "type": "integer",
            "format": "int32"
          },
          "product3Prop3": {
            "type": "integer",
            "format": "int32"
          },
          "product1Prop4": {
            "type": "integer",
            "format": "int32"
          },
          "product2Prop4": {
            "type": "integer",
            "format": "int32"
          },
          "product3Prop4": {
            "type": "integer",
            "format": "int32"
          },
          "product4Prop1": {
            "type": "integer",
            "format": "int32"
          },
          "product4Prop2": {
            "type": "integer",
            "format": "int32"
          },
          "product4Prop3": {
            "type": "integer",
            "format": "int32"
          },
          "product4Prop4": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KMCostModel": {
        "type": "object",
        "properties": {
          "brand1": {
            "type": "string"
          },
          "model1": {
            "type": "string"
          },
          "name1": {
            "type": "string"
          },
          "brand2": {
            "type": "string"
          },
          "model2": {
            "type": "string"
          },
          "name2": {
            "type": "string"
          },
          "years": {
            "type": "integer",
            "format": "int32"
          },
          "kMs": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BrandModel": {
        "type": "object",
        "properties": {
          "brand1": {
            "type": "string"
          },
          "brand2": {
            "type": "string"
          }
        }
      },
      "BrandModelModel": {
        "type": "object",
        "properties": {
          "brand1": {
            "type": "string"
          },
          "model1": {
            "type": "string"
          },
          "brand2": {
            "type": "string"
          },
          "model2": {
            "type": "string"
          }
        }
      },
      "CompanyModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "webSite": {
            "type": "string"
          },
          "hasStamp": {
            "type": "boolean"
          },
          "workingHours": {
            "type": "string"
          },
          "publicationDate": {
            "type": "string",
            "format": "date-time"
          },
          "about": {
            "type": "string"
          },
          "tasks": {
            "type": "string"
          },
          "nif": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryModel"
            }
          },
          "keyPhrases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyPhraseModel"
            }
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewModel"
            }
          },
          "avgGlobalScore": {
            "type": "number",
            "format": "double"
          },
          "avgResolutionSpeedScore": {
            "type": "number",
            "format": "double"
          },
          "avgCustomerServiceScore": {
            "type": "number",
            "format": "double"
          },
          "avgServiceQualityScore": {
            "type": "number",
            "format": "double"
          },
          "zaask": {
            "type": "string"
          }
        }
      },
      "CategoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "KeyPhraseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "keyPhrase": {
            "type": "string"
          }
        }
      },
      "ReviewModel": {
        "type": "object",
        "properties": {
          "customerServiceScore": {
            "type": "integer",
            "format": "int32"
          },
          "serviceQualityScore": {
            "type": "integer",
            "format": "int32"
          },
          "resolutionSpeedScore": {
            "type": "integer",
            "format": "int32"
          },
          "globalScore": {
            "type": "number",
            "format": "double"
          },
          "reviewerName": {
            "type": "string"
          },
          "quote": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          },
          "reviewerLocation": {
            "type": "string"
          },
          "isReviewerAnonymous": {
            "type": "boolean"
          }
        }
      },
      "DistrictModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "place": {
            "type": "string"
          },
          "federatedId": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          }
        }
      },
      "AddReviewRequestModel": {
        "type": "object",
        "properties": {
          "customerServiceScore": {
            "type": "integer",
            "format": "int32"
          },
          "serviceQualityScore": {
            "type": "integer",
            "format": "int32"
          },
          "resolutionSpeedScore": {
            "type": "integer",
            "format": "int32"
          },
          "reviewText": {
            "type": "string"
          },
          "reviewTitle": {
            "type": "string"
          },
          "reviewerUserEmail": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "string"
          },
          "recomended": {
            "type": "boolean"
          },
          "endOfTasks": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FormulaDc": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IngredientDetailsDc": {
        "required": [
          "culture",
          "ingredientId",
          "name"
        ],
        "type": "object",
        "properties": {
          "ingredientId": {
            "type": "integer",
            "format": "int32"
          },
          "culture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IngredientDc": {
        "required": [
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientDetailsDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DosageDc": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "unity": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ComponentDc": {
        "required": [
          "dosageId",
          "formulaId",
          "ingredientId"
        ],
        "type": "object",
        "properties": {
          "formulaId": {
            "type": "integer",
            "format": "int32"
          },
          "formula": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaDc"
              }
            ],
            "nullable": true
          },
          "ingredientId": {
            "type": "integer",
            "format": "int32"
          },
          "ingredient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDc"
              }
            ],
            "nullable": true
          },
          "dosageId": {
            "type": "integer",
            "format": "int32"
          },
          "dosage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DosageDc"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ComponentDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDetailsFilterDc": {
        "type": "object",
        "properties": {
          "ingredientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientFilterDc": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientDetailsFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DosageFilterDc": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unity": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentFilterDc": {
        "type": "object",
        "properties": {
          "formulaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ingredientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ingredient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientFilterDc"
              }
            ],
            "nullable": true
          },
          "dosageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dosage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DosageFilterDc"
              }
            ],
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DosageDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DosageDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DosageDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DosageDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DosageFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DosageFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormulaDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormulaDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormulaFilterDc": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormulaFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDetailsDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDetailsDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientDetailsFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IngredientDetailsFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDetailsDc": {
        "required": [
          "culture",
          "name",
          "wayOfAdministrationId"
        ],
        "type": "object",
        "properties": {
          "wayOfAdministrationId": {
            "type": "integer",
            "format": "int32"
          },
          "culture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDc": {
        "required": [
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDetailsFilterDc": {
        "type": "object",
        "properties": {
          "wayOfAdministrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationFilterDc": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WayOfAdministrationDetailsFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDetailsDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDetailsDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WayOfAdministrationDetailsFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDetailsFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PowerTrainType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "type": "integer",
        "format": "int32"
      },
      "CarResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "make": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "powerTrainType": {
            "type": "string",
            "nullable": true
          },
          "powerTrainTypeEid": {
            "$ref": "#/components/schemas/PowerTrainType"
          },
          "engineDisplacement": {
            "type": "integer",
            "format": "int32"
          },
          "enginePower": {
            "type": "integer",
            "format": "int32"
          },
          "trasmissionType": {
            "type": "string",
            "nullable": true
          },
          "emissionsStandard": {
            "type": "string",
            "nullable": true
          },
          "batteryCapacity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "driveWheel": {
            "type": "boolean"
          },
          "stopStartSystem": {
            "type": "boolean",
            "nullable": true
          },
          "cO2Emission": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "cO2EmissionDefault": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "isElectric": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "M21SelectListGroup": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "M21SelectListItem": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "group": {
            "$ref": "#/components/schemas/M21SelectListGroup"
          },
          "selected": {
            "type": "boolean"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveCarResource": {
        "type": "object",
        "properties": {
          "mile21CarId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "makeEid": {
            "type": "integer",
            "format": "int32"
          },
          "make": {
            "type": "string",
            "nullable": true
          },
          "modelEid": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "powerTrainEid": {
            "type": "integer",
            "format": "int32"
          },
          "powerTrainType": {
            "type": "string",
            "nullable": true
          },
          "engineDisplacement": {
            "type": "integer",
            "format": "int32"
          },
          "enginePower": {
            "type": "integer",
            "format": "int32"
          },
          "transmissionTypeEid": {
            "type": "integer",
            "format": "int32"
          },
          "trasmissionType": {
            "type": "string",
            "nullable": true
          },
          "emissionsStandardEid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "emissionsStandard": {
            "type": "string",
            "nullable": true
          },
          "batteryCapacity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "driveWheel": {
            "type": "boolean"
          },
          "stopStartSystem": {
            "type": "boolean",
            "nullable": true
          },
          "cO2Emission": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cO2EmissionDefault": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isElectric": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          },
          "federatedId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChallengeResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChallengeStatusResource": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startingValidFullTanksDone": {
            "type": "integer",
            "format": "int32"
          },
          "challengesValidFullTanksDone": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SinglePowerTrainType": {
        "enum": [
          0,
          1,
          2,
          3,
          6,
          11,
          12,
          14
        ],
        "type": "integer",
        "format": "int32"
      },
      "CompareConsumptionsResource": {
        "type": "object",
        "properties": {
          "isElectric": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          },
          "primaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "secondaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "fullTanksValidForCalc": {
            "type": "integer",
            "format": "int32"
          },
          "fullTanksDone": {
            "type": "integer",
            "format": "int32"
          },
          "userEmissionGrCO2PerKm": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionEuroPerKm": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionKmPerX": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionKmPerKwPhev": {
            "type": "number",
            "format": "double"
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "avgconsumptionM1co2value": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionUserco2value": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionModelco2value": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionM1l100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionUserl100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionModell100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionM1Kwh100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionUserKwh100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionModelKwh100": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionM1kml": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionUserkml": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionModelkml": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "avgconsumptionModelProcedure": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalConsumptionsResource": {
        "type": "object",
        "properties": {
          "isElectric": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          },
          "primaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "secondaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "fullTanksValidForCalc": {
            "type": "integer",
            "format": "int32"
          },
          "fullTanksDone": {
            "type": "integer",
            "format": "int32"
          },
          "userEmissionGrCO2PerKm": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionEuroPerKm": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionKmPerX": {
            "type": "number",
            "format": "double"
          },
          "userConsumptionKmPerKwPhev": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GlobalSavingsResource": {
        "type": "object",
        "properties": {
          "isElectric": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          },
          "primaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "secondaryPowerTrainType": {
            "$ref": "#/components/schemas/SinglePowerTrainType"
          },
          "fullTanksValidForCalc": {
            "type": "integer",
            "format": "int32"
          },
          "fullTanksDone": {
            "type": "integer",
            "format": "int32"
          },
          "challengeFullTanksDone": {
            "type": "integer",
            "format": "int32"
          },
          "challengesActive": {
            "type": "boolean"
          },
          "startingOdometer": {
            "type": "number",
            "format": "double"
          },
          "startingConsumptionXPerKm": {
            "type": "number",
            "format": "double"
          },
          "liters": {
            "type": "number",
            "format": "double"
          },
          "startingEmissionGrCO2PerKm": {
            "type": "number",
            "format": "double"
          },
          "emissionsInKgCO2": {
            "type": "number",
            "format": "double"
          },
          "fuelAveragePriceInEuroPerX": {
            "type": "number",
            "format": "double"
          },
          "fuelAveragePriceInEuroPerKwPhev": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Environment": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "LanguageResource": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "code639_3": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryResource": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          },
          "defaultLanguage": {
            "$ref": "#/components/schemas/LanguageResource"
          },
          "enabledLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageResource"
            },
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DrivingStyleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "hillyRange": {
            "type": "integer",
            "format": "int32"
          },
          "averageSingleTripRange": {
            "type": "integer",
            "format": "int32"
          },
          "highwaySpeedRange": {
            "type": "integer",
            "format": "int32"
          },
          "stopStartSystem": {
            "type": "boolean",
            "nullable": true
          },
          "numberOfPassengers": {
            "type": "integer",
            "format": "int32"
          },
          "tyreType": {
            "type": "integer",
            "format": "int32"
          },
          "dayTimeTemperatureRange": {
            "type": "integer",
            "format": "int32"
          },
          "airCondHeaterRange": {
            "type": "integer",
            "format": "int32"
          },
          "hangerCaravanRange": {
            "type": "integer",
            "format": "int32"
          },
          "roofRackRange": {
            "type": "integer",
            "format": "int32"
          },
          "extraLuggageRange": {
            "type": "integer",
            "format": "int32"
          },
          "urbanRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "ruralRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "highwayRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "electricDriveShare": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DrivingStyleRecapResource": {
        "type": "object",
        "properties": {
          "drivingStyle": {
            "$ref": "#/components/schemas/DrivingStyleResource"
          },
          "averageTripToShow": {
            "type": "string",
            "nullable": true
          },
          "highwaySpeedToShow": {
            "type": "string",
            "nullable": true
          },
          "hillyRangeToShow": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveDrivingStyleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "hillyRange": {
            "type": "integer",
            "format": "int32"
          },
          "averageSingleTripRange": {
            "type": "integer",
            "format": "int32"
          },
          "highwaySpeedRange": {
            "type": "integer",
            "format": "int32"
          },
          "stopStartSystem": {
            "type": "boolean",
            "nullable": true
          },
          "numberOfPassengers": {
            "type": "integer",
            "format": "int32"
          },
          "tyreType": {
            "type": "integer",
            "format": "int32"
          },
          "dayTimeTemperatureRange": {
            "type": "integer",
            "format": "int32"
          },
          "airCondHeaterRange": {
            "type": "integer",
            "format": "int32"
          },
          "hangerCaravanRange": {
            "type": "integer",
            "format": "int32"
          },
          "roofRackRange": {
            "type": "integer",
            "format": "int32"
          },
          "extraLuggageRange": {
            "type": "integer",
            "format": "int32"
          },
          "urbanRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "ruralRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "highwayRoutePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "electricDriveShare": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "federatedId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LovUnit": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          -2,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MakerResourceEm": {
        "type": "object",
        "properties": {
          "makeid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EuroResourceEm": {
        "type": "object",
        "properties": {
          "euroid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          },
          "fmile21vehicles": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransmissionResourceEm": {
        "type": "object",
        "properties": {
          "transmissionid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          },
          "fmile21vehicles": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehiclesResource": {
        "type": "object",
        "properties": {
          "mile21id": {
            "type": "integer",
            "format": "int32"
          },
          "groupid": {
            "type": "string",
            "nullable": true
          },
          "makeid": {
            "type": "integer",
            "format": "int32"
          },
          "modelid": {
            "type": "integer",
            "format": "int32"
          },
          "powertrainid": {
            "type": "integer",
            "format": "int32"
          },
          "fueltypeid": {
            "type": "integer",
            "format": "int32"
          },
          "engdisp": {
            "type": "integer",
            "format": "int32"
          },
          "engpower": {
            "type": "integer",
            "format": "int32"
          },
          "transmissionid": {
            "type": "integer",
            "format": "int32"
          },
          "awdcapableflag": {
            "type": "boolean",
            "nullable": true
          },
          "startstopflag": {
            "type": "boolean",
            "nullable": true
          },
          "euroid": {
            "type": "integer",
            "format": "int32"
          },
          "batterycapacity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "trimn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fueltypes": {
            "type": "string",
            "nullable": true
          },
          "modeldatemin": {
            "type": "string",
            "format": "date-time"
          },
          "modeldatemax": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marketstatusid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "co2nedcn": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2nedcmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2nedcavg": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2nedcmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2wltpn": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2wltpmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2wltpavg": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "co2wltpmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcnedccombmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcnedccombavg": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcnedccombmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcwltpcombmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcwltpcombavg": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "fcwltpcombmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "electricrangeavg": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "curbweightavg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gearsnmin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gearsnmax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vehicleheightavg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vehiclewidthavg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "segmentid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "euro": {
            "$ref": "#/components/schemas/EuroResourceEm"
          },
          "fueltype": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "make": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketstatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "model": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "powertrain": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "segment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isphev": {
            "type": "boolean"
          },
          "isfullelectric": {
            "type": "boolean"
          },
          "transmission": {
            "$ref": "#/components/schemas/TransmissionResourceEm"
          },
          "fremoteuservehicle": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehicleFindACarResource": {
        "type": "object",
        "properties": {
          "groupid": {
            "type": "string",
            "nullable": true
          },
          "make": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "fueltypes": {
            "type": "string",
            "nullable": true
          },
          "engdisp": {
            "type": "integer",
            "format": "int32"
          },
          "batterycapacity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "euro": {
            "type": "string",
            "nullable": true
          },
          "segment": {
            "type": "string",
            "nullable": true
          },
          "segmentid": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "powertrain": {
            "type": "string",
            "nullable": true
          },
          "powertrainid": {
            "type": "integer",
            "format": "int32"
          },
          "engpower": {
            "type": "integer",
            "format": "int32"
          },
          "marketstatusid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumptiondeclaredmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "consumptiondeclaredmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "consumptiondeclaredstandard": {
            "type": "string",
            "nullable": true
          },
          "consumptionmile21": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "emissiondeclaredmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "emissiondeclaredmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "emissiondeclaredstandard": {
            "type": "string",
            "nullable": true
          },
          "emissionmile21": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "kwhdeclaredmin": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "kwhdeclaredmax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "kwhdeclaredstandard": {
            "type": "string",
            "nullable": true
          },
          "kwhmile21": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "transmission": {
            "type": "string",
            "nullable": true
          },
          "transmissionid": {
            "type": "integer",
            "format": "int32"
          },
          "electricrange": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "isfullelectric": {
            "type": "boolean"
          },
          "modeldatemin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modeldatemax": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VeichleListForFindACar": {
        "type": "object",
        "properties": {
          "numberofcars": {
            "type": "integer",
            "format": "int32"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleFindACarResource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelResourceEm": {
        "type": "object",
        "properties": {
          "modelid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MakerModelResourceEm": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/ModelResourceEm"
          }
        },
        "additionalProperties": false
      },
      "PowertrainResourceEm": {
        "type": "object",
        "properties": {
          "powertrainid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SegmentResourceEm": {
        "type": "object",
        "properties": {
          "segmentid": {
            "type": "integer",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocaleResource": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LovClassTarget": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "LovResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/LovClassTarget"
          },
          "unit": {
            "$ref": "#/components/schemas/LovUnit"
          },
          "enumNumberValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DrivingStyleLovsResource": {
        "type": "object",
        "properties": {
          "hills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "singleTrip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "highwaySpeed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "numberOfPassengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "tyreType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "dayTimeTemperature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "airCondHeater": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "hangerCaravan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "roofRack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          },
          "extraLuggage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/M21SelectListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MergeFederatedIdsResource": {
        "type": "object",
        "properties": {
          "victimUserId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "realm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlaveMergeResponse": {
        "type": "object",
        "properties": {
          "undoMemento": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MergeFederatedIdsResponse": {
        "type": "object",
        "properties": {
          "slaveMergeResponse": {
            "$ref": "#/components/schemas/SlaveMergeResponse"
          }
        },
        "additionalProperties": false
      },
      "UndoMergeFederatedIdsRequest": {
        "type": "object",
        "properties": {
          "victimUserId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "requestIdToUndo": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "realm": {
            "type": "string",
            "nullable": true
          },
          "undoMemento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlaveUndoResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UndoMergeUserResponse": {
        "type": "object",
        "properties": {
          "slaveUndoResponse": {
            "$ref": "#/components/schemas/SlaveUndoResponse"
          }
        },
        "additionalProperties": false
      },
      "RefuelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "drivingStyleId": {
            "type": "integer",
            "format": "int32"
          },
          "refuelDate": {
            "type": "string",
            "format": "date-time"
          },
          "gasStationName": {
            "type": "string",
            "nullable": true
          },
          "odometer": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fuel": {
            "type": "number",
            "format": "double"
          },
          "fullTank": {
            "type": "boolean"
          },
          "avgElectricityConsumption": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hasMissedRefuels": {
            "type": "boolean"
          },
          "inInvalidOdometerRange": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RefuelWithAveragesResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "drivingStyleId": {
            "type": "integer",
            "format": "int32"
          },
          "refuelDate": {
            "type": "string",
            "format": "date-time"
          },
          "gasStationName": {
            "type": "string",
            "nullable": true
          },
          "odometer": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fuel": {
            "type": "number",
            "format": "double"
          },
          "fullTank": {
            "type": "boolean"
          },
          "avgElectricityConsumption": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hasMissedRefuels": {
            "type": "boolean"
          },
          "inInvalidOdometerRange": {
            "type": "boolean"
          },
          "averageEmissionGrCO2OnKm": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageConsumptionKmOnX": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageConsumptionXon100Km": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isGood": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HistorySavingsResource": {
        "type": "object",
        "properties": {
          "challengeRefuelsWithAverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefuelWithAveragesResource"
            },
            "nullable": true
          },
          "startingRefuelWithAverages": {
            "$ref": "#/components/schemas/RefuelWithAveragesResource"
          },
          "challengesAreActive": {
            "type": "boolean"
          },
          "isElectric": {
            "type": "boolean"
          },
          "isPhev": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveRefuelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "drivingStyleId": {
            "type": "integer",
            "format": "int32"
          },
          "refuelDate": {
            "type": "string",
            "format": "date-time"
          },
          "gasStationName": {
            "type": "string",
            "nullable": true
          },
          "odometer": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fuel": {
            "type": "number",
            "format": "double"
          },
          "fullTank": {
            "type": "boolean"
          },
          "avgElectricityConsumption": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hasMissedRefuels": {
            "type": "boolean"
          },
          "inInvalidOdometerRange": {
            "type": "boolean"
          },
          "federatedId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefuelKeysResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "carId": {
            "type": "integer",
            "format": "int32"
          },
          "drivingStyleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RefuelValidationEventResource": {
        "type": "object",
        "properties": {
          "refuelDate": {
            "type": "string",
            "format": "date-time"
          },
          "odometer": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RefuelValidationResource": {
        "type": "object",
        "properties": {
          "refuels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefuelValidationEventResource"
            },
            "nullable": true
          },
          "averageFuelCost": {
            "type": "number",
            "format": "double"
          },
          "maxTankOrBatteryCapacity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatisticsResource": {
        "type": "object",
        "properties": {
          "registeredUsersCount": {
            "type": "integer",
            "format": "int32"
          },
          "registeredCarsCount": {
            "type": "integer",
            "format": "int32"
          },
          "refuelsCount": {
            "type": "integer",
            "format": "int32"
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserState": {
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "StatusResource": {
        "type": "object",
        "properties": {
          "userState": {
            "$ref": "#/components/schemas/UserState"
          }
        },
        "additionalProperties": false
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "federatedId": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/UserState"
          },
          "selectedLocale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDetailsDc": {
        "required": [
          "culture",
          "galenicFormId",
          "name"
        ],
        "type": "object",
        "properties": {
          "galenicFormId": {
            "type": "integer",
            "format": "int32"
          },
          "culture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDc": {
        "required": [
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GalenicFormDetailsDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDetailsFilterDc": {
        "type": "object",
        "properties": {
          "galenicFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormFilterDc": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GalenicFormDetailsFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDetailsDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDetailsDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GalenicFormDetailsFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDetailsFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportDataRequest": {
        "type": "object",
        "properties": {
          "requester": {
            "type": "string",
            "nullable": true
          },
          "thirdParty": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "requester": {
            "type": "string",
            "nullable": true
          },
          "thirdParty": {
            "type": "string",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "results": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportResponse": {
        "type": "object",
        "properties": {
          "import": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportData"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelImportRequest": {
        "type": "object",
        "properties": {
          "requester": {
            "type": "string",
            "nullable": true
          },
          "importId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetImportsRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "thirdParty": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportsResponse": {
        "type": "object",
        "properties": {
          "imports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportStatusRequest": {
        "type": "object",
        "properties": {
          "importId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWayOfAdministrationDc": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDc"
              }
            ],
            "nullable": true
          },
          "wayOfAdministrationId": {
            "type": "integer",
            "format": "int32"
          },
          "wayOfAdministration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationDc"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDetailsDc": {
        "required": [
          "culture",
          "name",
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "culture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDc": {
        "required": [
          "companyId",
          "formulaId",
          "galenicFormId",
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDc"
              }
            ],
            "nullable": true
          },
          "galenicFormId": {
            "type": "integer",
            "format": "int32"
          },
          "galenicForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormDc"
              }
            ],
            "nullable": true
          },
          "waysOfAdministration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
            },
            "nullable": true
          },
          "formulaId": {
            "type": "integer",
            "format": "int32"
          },
          "formula": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaDc"
              }
            ],
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailsDc"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasLastVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HasLastVersionDc"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWayOfAdministrationFilterDc": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wayOfAdministrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wayOfAdministration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WayOfAdministrationFilterDc"
              }
            ],
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDetailsFilterDc": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductFilterDc": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyFilterDc"
              }
            ],
            "nullable": true
          },
          "galenicFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "galenicForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GalenicFormFilterDc"
              }
            ],
            "nullable": true
          },
          "waysOfAdministration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWayOfAdministrationFilterDc"
            },
            "nullable": true
          },
          "formulaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formula": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormulaFilterDc"
              }
            ],
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetailsFilterDc"
            },
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isToPublish": {
            "type": "boolean",
            "nullable": true
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "take": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDetailsDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDetailsDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDetailsDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDetailsFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductDetailsFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWayOfAdministrationDcCreateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWayOfAdministrationDcUpdateItemRequest": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductWayOfAdministrationDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWayOfAdministrationFilterDcGetItemsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductWayOfAdministrationFilterDc"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n\r\n          Enter 'Bearer' [space] and then your token in the text input below.\r\n          \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}